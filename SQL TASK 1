CREATE TABLE Students (
    student_id INT PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    department VARCHAR(50)
);

INSERT INTO Students VALUES
(1, 'Ayesha', 20, 'Computer Science'),
(2, 'Rahul', 22, 'Electronics'),
(3, 'Neha', 21, 'Computer Science'),
(4, 'Imran', 23, 'Mechanical'),
(5, 'Sana', 20, 'Electronics');

CREATE TABLE Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(50),
    department VARCHAR(50)
);

INSERT INTO Courses VALUES
(101, 'DBMS', 'Computer Science'),
(102, 'Data Structures', 'Computer Science'),
(103, 'Digital Logic', 'Electronics'),
(104, 'Thermodynamics', 'Mechanical');

CREATE TABLE Enrollments (
    enrollment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    marks INT,
    FOREIGN KEY (student_id) REFERENCES Students(student_id),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

INSERT INTO Enrollments VALUES
(1, 1, 101, 85),
(2, 1, 102, 90),
(3, 2, 103, 75),
(4, 3, 101, 92),
(5, 4, 104, 60),
(6, 5, 103, 80);


-- INNER JOIN
SELECT s.name, c.course_name
FROM Students s
INNER JOIN Enrollments e ON s.student_id = e.student_id
INNER JOIN Courses c ON e.course_id = c.course_id;

-- LEFT JOIN
SELECT s.name, c.course_name
FROM Students s
LEFT JOIN Enrollments e ON s.student_id = e.student_id
LEFT JOIN Courses c ON e.course_id = c.course_id;

-- RIGHT JOIN
SELECT s.name, c.course_name
FROM Students s
RIGHT JOIN Enrollments e ON s.student_id = e.student_id
RIGHT JOIN Courses c ON e.course_id = c.course_id;

-- FULL OUTER JOIN (if supported)
SELECT s.name, c.course_name
FROM Students s
FULL OUTER JOIN Enrollments e ON s.student_id = e.student_id
FULL OUTER JOIN Courses c ON e.course_id = c.course_id;
